# Generated by Django 4.0.7 on 2023-11-18 18:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('faculty', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_status', models.CharField(choices=[('not send', 'Not Send'), ('waiting', 'Waiting'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='Not Send', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_name', models.CharField(max_length=100)),
                ('unit_selection_start_time', models.DateTimeField()),
                ('unit_selection_end_time', models.DateTimeField()),
                ('courses_start_time', models.DateField()),
                ('courses_end_time', models.DateField()),
                ('repairing_unit_selection_start_time', models.DateTimeField()),
                ('repairing_unit_selection_end_time', models.DateTimeField()),
                ('emergency_deletion_end_time', models.DateTimeField()),
                ('exams_start_time', models.DateField()),
                ('term_end_time', models.DateField()),
                ('professor_registered', models.ManyToManyField(blank=True, related_name='registered_term_professor', to='account.professor')),
                ('students_registered', models.ManyToManyField(blank=True, related_name='registered_term_students', to='account.student')),
            ],
        ),
        migrations.CreateModel(
            name='TermRemovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_result', models.CharField(choices=[('acc', 'Accepted'), ('rjc', 'Rejected')], max_length=10)),
                ('student_explanation', models.TextField(blank=True, null=True)),
                ('with_academic_years', models.BooleanField()),
                ('educational_assistant_explanation', models.TextField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='term.term')),
            ],
        ),
        migrations.CreateModel(
            name='TermCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_days_and_times', models.JSONField(help_text='Select class days and times in JSON format')),
                ('exam_time', models.DateTimeField(blank=True, null=True)),
                ('exam_place', models.CharField(blank=True, max_length=100, null=True)),
                ('course_capacity', models.PositiveIntegerField()),
                ('course_professor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.professor')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='faculty.approvedcourse')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='term.term')),
            ],
        ),
        migrations.AddField(
            model_name='term',
            name='term_courses',
            field=models.ManyToManyField(blank=True, related_name='courses_term', to='term.termcourse'),
        ),
        migrations.CreateModel(
            name='RemovalAndExtensionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_status', models.CharField(choices=[('confirmed', 'Confirmed'), ('failed', 'Failed')], max_length=10)),
                ('extended_courses', models.ManyToManyField(related_name='extended_courses', to='term.termcourse')),
                ('removed_courses', models.ManyToManyField(related_name='removed_courses', to='term.registrationrequest')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student')),
            ],
        ),
        migrations.AddField(
            model_name='registrationrequest',
            name='courses',
            field=models.ManyToManyField(blank=True, null=True, to='term.termcourse'),
        ),
        migrations.AddField(
            model_name='registrationrequest',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.student'),
        ),
        migrations.AddField(
            model_name='registrationrequest',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='term.term'),
        ),
        migrations.CreateModel(
            name='ReconsiderationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reconsideration_text', models.TextField()),
                ('reconsideration_response', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='term.termcourse')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student')),
            ],
        ),
        migrations.CreateModel(
            name='EnrollmentCertificateRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_certificate', models.FileField(upload_to='')),
                ('place_of_issue', models.CharField(max_length=100)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='term.term')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyRemovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_result', models.CharField(choices=[('acc', 'Accepted'), ('rjc', 'Rejected')], max_length=10)),
                ('student_explanation', models.TextField(blank=True, null=True)),
                ('educational_assistant_explanation', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='term.termcourse')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student')),
            ],
        ),
        migrations.CreateModel(
            name='CourseStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_status', models.CharField(choices=[('passed', 'Passed'), ('active', 'Active'), ('failed', 'Failed'), ('deleted', 'Deleted')], max_length=10)),
                ('student_score', models.FloatField(blank=True, max_length=20, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='term.termcourse')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='account.student')),
                ('term_taken', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='term.term')),
            ],
        ),
    ]
